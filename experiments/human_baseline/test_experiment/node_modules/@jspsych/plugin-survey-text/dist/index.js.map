{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-text\",\n  parameters: {\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      default: undefined,\n      nested: {\n        /** Question prompt. */\n        prompt: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n        },\n        /** Placeholder text in the response text box. */\n        placeholder: {\n          type: ParameterType.STRING,\n          pretty_name: \"Placeholder\",\n          default: \"\",\n        },\n        /** The number of rows for the response text box. */\n        rows: {\n          type: ParameterType.INT,\n          pretty_name: \"Rows\",\n          default: 1,\n        },\n        /** The number of columns for the response text box. */\n        columns: {\n          type: ParameterType.INT,\n          pretty_name: \"Columns\",\n          default: 40,\n        },\n        /** Whether or not a response to this question must be given in order to continue. */\n        required: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Required\",\n          default: false,\n        },\n        /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n        },\n      },\n    },\n    /** If true, the order of the questions in the 'questions' array will be randomized. */\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n    },\n    /** HTML-formatted string to display at top of the page above all of the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** Label of the button to submit responses. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-text**\n *\n * jsPsych plugin for free text response survey questions\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-text/ survey-text plugin documentation on jspsych.org}\n */\nclass SurveyTextPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    for (var i = 0; i < trial.questions.length; i++) {\n      if (typeof trial.questions[i].rows == \"undefined\") {\n        trial.questions[i].rows = 1;\n      }\n    }\n    for (var i = 0; i < trial.questions.length; i++) {\n      if (typeof trial.questions[i].columns == \"undefined\") {\n        trial.questions[i].columns = 40;\n      }\n    }\n    for (var i = 0; i < trial.questions.length; i++) {\n      if (typeof trial.questions[i].value == \"undefined\") {\n        trial.questions[i].value = \"\";\n      }\n    }\n\n    var html = \"\";\n    // show preamble text\n    if (trial.preamble !== null) {\n      html +=\n        '<div id=\"jspsych-survey-text-preamble\" class=\"jspsych-survey-text-preamble\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n    // start form\n    if (trial.autocomplete) {\n      html += '<form id=\"jspsych-survey-text-form\">';\n    } else {\n      html += '<form id=\"jspsych-survey-text-form\" autocomplete=\"off\">';\n    }\n    // generate question order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n\n    // add questions\n    for (var i = 0; i < trial.questions.length; i++) {\n      var question = trial.questions[question_order[i]];\n      var question_index = question_order[i];\n      html +=\n        '<div id=\"jspsych-survey-text-' +\n        question_index +\n        '\" class=\"jspsych-survey-text-question\" style=\"margin: 2em 0em;\">';\n      html += '<p class=\"jspsych-survey-text\">' + question.prompt + \"</p>\";\n      var autofocus = i == 0 ? \"autofocus\" : \"\";\n      var req = question.required ? \"required\" : \"\";\n      if (question.rows == 1) {\n        html +=\n          '<input type=\"text\" id=\"input-' +\n          question_index +\n          '\"  name=\"#jspsych-survey-text-response-' +\n          question_index +\n          '\" data-name=\"' +\n          question.name +\n          '\" size=\"' +\n          question.columns +\n          '\" ' +\n          autofocus +\n          \" \" +\n          req +\n          ' placeholder=\"' +\n          question.placeholder +\n          '\"></input>';\n      } else {\n        html +=\n          '<textarea id=\"input-' +\n          question_index +\n          '\" name=\"#jspsych-survey-text-response-' +\n          question_index +\n          '\" data-name=\"' +\n          question.name +\n          '\" cols=\"' +\n          question.columns +\n          '\" rows=\"' +\n          question.rows +\n          '\" ' +\n          autofocus +\n          \" \" +\n          req +\n          ' placeholder=\"' +\n          question.placeholder +\n          '\"></textarea>';\n      }\n      html += \"</div>\";\n    }\n\n    // add submit button\n    html +=\n      '<input type=\"submit\" id=\"jspsych-survey-text-next\" class=\"jspsych-btn jspsych-survey-text\" value=\"' +\n      trial.button_label +\n      '\"></input>';\n\n    html += \"</form>\";\n    display_element.innerHTML = html;\n\n    // backup in case autofocus doesn't work\n    display_element.querySelector<HTMLInputElement>(\"#input-\" + question_order[0]).focus();\n\n    display_element.querySelector(\"#jspsych-survey-text-form\").addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = Math.round(endTime - startTime);\n\n      // create object to hold responses\n      var question_data = {};\n\n      for (var index = 0; index < trial.questions.length; index++) {\n        var id = \"Q\" + index;\n        var q_element = document\n          .querySelector(\"#jspsych-survey-text-\" + index)\n          .querySelector(\"textarea, input\") as HTMLInputElement;\n        var val = q_element.value;\n        var name = q_element.attributes[\"data-name\"].value;\n        if (name == \"\") {\n          name = id;\n        }\n        var obje = {};\n        obje[name] = val;\n        Object.assign(question_data, obje);\n      }\n      // save data\n      var trialdata = {\n        rt: response_time,\n        response: question_data,\n      };\n\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trialdata);\n    });\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const question_data = {};\n    let rt = 1000;\n\n    for (const q of trial.questions) {\n      const name = q.name ? q.name : `Q${trial.questions.indexOf(q)}`;\n      const ans_words =\n        q.rows == 1\n          ? this.jsPsych.randomization.sampleExponential(0.25)\n          : this.jsPsych.randomization.randomInt(1, 10) * q.rows;\n      question_data[name] = this.jsPsych.randomization.randomWords({\n        exactly: ans_words,\n        join: \" \",\n      });\n      rt += this.jsPsych.randomization.sampleExGaussian(2000, 400, 0.004, true);\n    }\n\n    const default_data = {\n      response: question_data,\n      rt: rt,\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const answers = Object.entries(data.response).map((x) => {\n      return x[1] as string;\n    });\n    for (let i = 0; i < answers.length; i++) {\n      this.jsPsych.pluginAPI.fillTextInput(\n        display_element.querySelector(`#input-${i}`),\n        answers[i],\n        ((data.rt - 1000) / answers.length) * (i + 1)\n      );\n    }\n\n    this.jsPsych.pluginAPI.clickTarget(\n      display_element.querySelector(\"#jspsych-survey-text-next\"),\n      data.rt\n    );\n  }\n}\n\nexport default SurveyTextPlugin;\n"],"names":[],"mappings":"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"}