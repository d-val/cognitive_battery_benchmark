{"version":3,"file":"index.browser.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"survey-multi-choice\",\n  parameters: {\n    /** Array containing one or more objects with parameters for the question(s) that should be shown on the page. */\n    questions: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      pretty_name: \"Questions\",\n      nested: {\n        /** Question prompt. */\n        prompt: {\n          type: ParameterType.HTML_STRING,\n          pretty_name: \"Prompt\",\n          default: undefined,\n        },\n        /** Array of multiple choice options for this question. */\n        options: {\n          type: ParameterType.STRING,\n          pretty_name: \"Options\",\n          array: true,\n          default: undefined,\n        },\n        /** Whether or not a response to this question must be given in order to continue. */\n        required: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Required\",\n          default: false,\n        },\n        /** If true, then the question will be centered and options will be displayed horizontally. */\n        horizontal: {\n          type: ParameterType.BOOL,\n          pretty_name: \"Horizontal\",\n          default: false,\n        },\n        /** Name of the question in the trial data. If no name is given, the questions are named Q0, Q1, etc. */\n        name: {\n          type: ParameterType.STRING,\n          pretty_name: \"Question Name\",\n          default: \"\",\n        },\n      },\n    },\n    /** If true, the order of the questions in the 'questions' array will be randomized. */\n    randomize_question_order: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Randomize Question Order\",\n      default: false,\n    },\n    /** HTML-formatted string to display at top of the page above all of the questions. */\n    preamble: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Preamble\",\n      default: null,\n    },\n    /** Label of the button to submit responses. */\n    button_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label\",\n      default: \"Continue\",\n    },\n    /** Setting this to true will enable browser auto-complete or auto-fill for the form. */\n    autocomplete: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow autocomplete\",\n      default: false,\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **survey-multi-choice**\n *\n * jsPsych plugin for presenting multiple choice survey questions\n *\n * @author Shane Martin\n * @see {@link https://www.jspsych.org/plugins/jspsych-survey-multi-choice/ survey-multi-choice plugin documentation on jspsych.org}\n */\nclass SurveyMultiChoicePlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var plugin_id_name = \"jspsych-survey-multi-choice\";\n\n    var html = \"\";\n\n    // inject CSS for trial\n    html += '<style id=\"jspsych-survey-multi-choice-css\">';\n    html +=\n      \".jspsych-survey-multi-choice-question { margin-top: 2em; margin-bottom: 2em; text-align: left; }\" +\n      \".jspsych-survey-multi-choice-text span.required {color: darkred;}\" +\n      \".jspsych-survey-multi-choice-horizontal .jspsych-survey-multi-choice-text {  text-align: center;}\" +\n      \".jspsych-survey-multi-choice-option { line-height: 2; }\" +\n      \".jspsych-survey-multi-choice-horizontal .jspsych-survey-multi-choice-option {  display: inline-block;  margin-left: 1em;  margin-right: 1em;  vertical-align: top;}\" +\n      \"label.jspsych-survey-multi-choice-text input[type='radio'] {margin-right: 1em;}\";\n    html += \"</style>\";\n\n    // show preamble text\n    if (trial.preamble !== null) {\n      html +=\n        '<div id=\"jspsych-survey-multi-choice-preamble\" class=\"jspsych-survey-multi-choice-preamble\">' +\n        trial.preamble +\n        \"</div>\";\n    }\n\n    // form element\n    if (trial.autocomplete) {\n      html += '<form id=\"jspsych-survey-multi-choice-form\">';\n    } else {\n      html += '<form id=\"jspsych-survey-multi-choice-form\" autocomplete=\"off\">';\n    }\n    // generate question order. this is randomized here as opposed to randomizing the order of trial.questions\n    // so that the data are always associated with the same question regardless of order\n    var question_order = [];\n    for (var i = 0; i < trial.questions.length; i++) {\n      question_order.push(i);\n    }\n    if (trial.randomize_question_order) {\n      question_order = this.jsPsych.randomization.shuffle(question_order);\n    }\n\n    // add multiple-choice questions\n    for (var i = 0; i < trial.questions.length; i++) {\n      // get question based on question_order\n      var question = trial.questions[question_order[i]];\n      var question_id = question_order[i];\n\n      // create question container\n      var question_classes = [\"jspsych-survey-multi-choice-question\"];\n      if (question.horizontal) {\n        question_classes.push(\"jspsych-survey-multi-choice-horizontal\");\n      }\n\n      html +=\n        '<div id=\"jspsych-survey-multi-choice-' +\n        question_id +\n        '\" class=\"' +\n        question_classes.join(\" \") +\n        '\"  data-name=\"' +\n        question.name +\n        '\">';\n\n      // add question text\n      html += '<p class=\"jspsych-survey-multi-choice-text survey-multi-choice\">' + question.prompt;\n      if (question.required) {\n        html += \"<span class='required'>*</span>\";\n      }\n      html += \"</p>\";\n\n      // create option radio buttons\n      for (var j = 0; j < question.options.length; j++) {\n        // add label and question text\n        var option_id_name = \"jspsych-survey-multi-choice-option-\" + question_id + \"-\" + j;\n        var input_name = \"jspsych-survey-multi-choice-response-\" + question_id;\n        var input_id = \"jspsych-survey-multi-choice-response-\" + question_id + \"-\" + j;\n\n        var required_attr = question.required ? \"required\" : \"\";\n\n        // add radio button container\n        html += '<div id=\"' + option_id_name + '\" class=\"jspsych-survey-multi-choice-option\">';\n        html += '<label class=\"jspsych-survey-multi-choice-text\" for=\"' + input_id + '\">';\n        html +=\n          '<input type=\"radio\" name=\"' +\n          input_name +\n          '\" id=\"' +\n          input_id +\n          '\" value=\"' +\n          question.options[j] +\n          '\" ' +\n          required_attr +\n          \"></input>\";\n        html += question.options[j] + \"</label>\";\n        html += \"</div>\";\n      }\n\n      html += \"</div>\";\n    }\n\n    // add submit button\n    html +=\n      '<input type=\"submit\" id=\"' +\n      plugin_id_name +\n      '-next\" class=\"' +\n      plugin_id_name +\n      ' jspsych-btn\"' +\n      (trial.button_label ? ' value=\"' + trial.button_label + '\"' : \"\") +\n      \"></input>\";\n    html += \"</form>\";\n\n    // render\n    display_element.innerHTML = html;\n\n    document.querySelector(\"form\").addEventListener(\"submit\", (event) => {\n      event.preventDefault();\n      // measure response time\n      var endTime = performance.now();\n      var response_time = Math.round(endTime - startTime);\n\n      // create object to hold responses\n      var question_data = {};\n      for (var i = 0; i < trial.questions.length; i++) {\n        var match = display_element.querySelector(\"#jspsych-survey-multi-choice-\" + i);\n        var id = \"Q\" + i;\n        var val: String;\n        if (match.querySelector(\"input[type=radio]:checked\") !== null) {\n          val = match.querySelector<HTMLInputElement>(\"input[type=radio]:checked\").value;\n        } else {\n          val = \"\";\n        }\n        var obje = {};\n        var name = id;\n        if (match.attributes[\"data-name\"].value !== \"\") {\n          name = match.attributes[\"data-name\"].value;\n        }\n        obje[name] = val;\n        Object.assign(question_data, obje);\n      }\n      // save data\n      var trial_data = {\n        rt: response_time,\n        response: question_data,\n        question_order: question_order,\n      };\n      display_element.innerHTML = \"\";\n\n      // next trial\n      this.jsPsych.finishTrial(trial_data);\n    });\n\n    var startTime = performance.now();\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    const question_data = {};\n    let rt = 1000;\n\n    for (const q of trial.questions) {\n      const name = q.name ? q.name : `Q${trial.questions.indexOf(q)}`;\n      question_data[name] = this.jsPsych.randomization.sampleWithoutReplacement(q.options, 1)[0];\n      rt += this.jsPsych.randomization.sampleExGaussian(1500, 400, 1 / 200, true);\n    }\n\n    const default_data = {\n      response: question_data,\n      rt: rt,\n      question_order: trial.randomize_question_order\n        ? this.jsPsych.randomization.shuffle([...Array(trial.questions.length).keys()])\n        : [...Array(trial.questions.length).keys()],\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const answers = Object.entries(data.response);\n    for (let i = 0; i < answers.length; i++) {\n      this.jsPsych.pluginAPI.clickTarget(\n        display_element.querySelector(\n          `#jspsych-survey-multi-choice-response-${i}-${trial.questions[i].options.indexOf(\n            answers[i][1]\n          )}`\n        ),\n        ((data.rt - 1000) / answers.length) * (i + 1)\n      );\n    }\n\n    this.jsPsych.pluginAPI.clickTarget(\n      display_element.querySelector(\"#jspsych-survey-multi-choice-next\"),\n      data.rt\n    );\n  }\n}\n\nexport default SurveyMultiChoicePlugin;\n"],"names":["ParameterType"],"mappings":"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"}