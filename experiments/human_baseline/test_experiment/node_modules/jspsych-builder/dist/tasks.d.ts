import { ListrTask } from "listr";
import { Compiler } from "webpack";
import WebpackDevServer from "webpack-dev-server";
import { UserConfig } from "./config";
import { InitInput } from "./interactions";
import { AssetPaths } from "./util";
export interface Pragmas {
    title: string;
    description: string;
    version: string;
    assets?: string;
    imageDir?: string;
    audioDir?: string;
    videoDir?: string;
    miscDir?: string;
}
export interface BuilderContext {
    userInput?: InitInput;
    experiment: string;
    absoluteExperimentFilePath?: string;
    pragmas?: Pragmas;
    /** A list of all asset directory paths */
    assetDirsList?: string[];
    /** A list of paths of all asset files that do not reside in a directory in `assetDirsList` */
    assetFilesList?: string[];
    /**
     * The asset paths, grouped by their type, that will be passed to the experiment file's `run`
     * function
     */
    assetPaths?: AssetPaths;
    isForJatos?: boolean;
    isProduction?: boolean;
    devServerPort?: number;
    compiler?: Compiler;
    devServer?: WebpackDevServer;
    message?: string;
    config?: UserConfig;
}
export declare const compileProjectTemplate: {
    title: string;
    task: (ctx: BuilderContext) => Promise<[void, void, void]>;
};
export declare const installDependencies: ListrTask<BuilderContext>;
export declare const build: ListrTask<BuilderContext>;
export declare const webpackDevServer: ListrTask<BuilderContext>;
export declare const pack: ListrTask<BuilderContext>;
